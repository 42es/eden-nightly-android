name: Build Eden Android

on:
  workflow_dispatch:

jobs:
  info:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Clone Eden and get hash info
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Clone Eden repo to get proper hash
          if ! git clone 'https://git.eden-emu.dev/eden-emu/eden.git' ./eden; then
            echo "Using mirror instead..."
            rm -rf ./eden || true
            git clone 'https://github.com/pflyly/eden-mirror.git' ./eden
          fi
          cd ./eden
          
          # Get current hash from eden repo
          current_hash=$(git rev-parse --short HEAD)
          echo "CURRENT_EDEN_HASH=$current_hash" >> "$GITHUB_ENV"
          
          # Try to get previous release tag from THIS workflow repo
          cd ..
          api_url="https://api.github.com/repos/${{ github.repository }}"
          latest_release_info=$(curl -sH "Authorization: token $GH_TOKEN" "$api_url/releases/latest")
          last_release_tag=$(echo "$latest_release_info" | jq -r '.tag_name')

          if [ "$last_release_tag" = "null" ] || [ -z "$last_release_tag" ]; then
            echo "No previous release tag found. Using current eden hash as OLD_HASH"
            echo "OLD_HASH=$current_hash" >> "$GITHUB_ENV"
          else
            echo "Previous tag: $last_release_tag"
            # Extract hash from tag format: YYYY-MM-DD-hash
            candidate="${last_release_tag##*-}"
            
            cd ./eden
            if git rev-parse --verify "$candidate" >/dev/null 2>&1; then
              echo "'$candidate' is a valid commit hash in eden repo"
              echo "OLD_HASH=$candidate" >> "$GITHUB_ENV"
            else
              echo "'$candidate' is not a valid commit in eden repo. Using current hash"
              echo "OLD_HASH=$current_hash" >> "$GITHUB_ENV"
            fi
          fi

      - name: Generate changelog
        run: |
          chmod +x ./changelog.sh
          ./changelog.sh
          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat ~/changelog >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload changelog
        uses: actions/upload-artifact@v4
        with:
          name: changelog
          path: changelog

  android:
    needs: info
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [Replace, Coexist, Optimised]
    env:
      TARGET: ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y glslang-tools libvulkan-dev

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - uses: gradle/actions/setup-gradle@v4

      - uses: android-actions/setup-android@v2

      - name: Compile Eden Android (${{ matrix.target }})
        run: |
          chmod +x ./eden-android.sh
          ./eden-android.sh

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: eden-android-${{ matrix.target }}
          path: eden/src/android/artifacts/

  release:
    needs: [info, android]
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: downloaded-artifacts

      - name: Read changelog
        id: changelog
        run: |
          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat ~/changelog >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          name: "Eden Unofficial Android Nightly"
          body: ${{ steps.changelog.outputs.body }}
          files: downloaded-artifacts/eden-android-*/Eden-*.apk