name: Build Eden Nightly
concurrency:
  group: build-eden-nightly-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch: {}

jobs:
  info:
    runs-on: ubuntu-latest
    name: "Get info"
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          persist-credentials: false

      - name: Get the latest release tag
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          api_url="https://api.github.com/repos/${{ github.repository }}"
          latest_release_info=$(curl -H "Authorization: token $GH_TOKEN" "$api_url/releases/latest")
          last_release_tag=$(echo "$latest_release_info" | jq -r '.tag_name')
          echo "${last_release_tag}"
          old_hash="${last_release_tag##*-}"
          echo "OLD_HASH=$old_hash" >> "$GITHUB_ENV"

      - name: Generate changelog
        run: |
          chmod +x ./changelog.sh
          ./changelog.sh

      - name: Upload tag file
        uses: actions/upload-artifact@v4.6.2
        with:
          name: tag
          path: ~/tag

      - name: Upload count file
        uses: actions/upload-artifact@v4.6.2
        with:
          name: count
          path: ~/count

      - name: Upload changelog file
        uses: actions/upload-artifact@v4.6.2
        with:
          name: changelog
          path: ~/changelog

      - name: Upload source code
        uses: actions/upload-artifact@v4.6.2
        with:
          name: source
          path: artifacts

  android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [Replace, Coexist, Optimised]
    continue-on-error: true
    name: "Android (${{ matrix.target }})"
    env:
      TARGET: ${{ matrix.target }}
    steps:
      - uses: actions/checkout@v4.2.2

      - name: Install dependencies
        run: |
          sudo apt-get install glslang-tools libvulkan-dev -y

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 17

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-read-only: false

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2

      - name: Compile Eden android
        run: |
          chmod +x ./eden-android.sh
          ./eden-android.sh

      - name: Upload artifact
        uses: actions/upload-artifact@v4.6.2
        with:
          name: eden-android-${{ matrix.target }}
          path: eden/src/android/artifacts/

  release:
    name: "release"
    if: ${{ github.ref_name == 'main' }}
    needs: [info, android]
    permissions:
      actions: read
      security-events: write
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4.3.0
        with:
          name: eden-android-Replace

      - uses: actions/download-artifact@v4.3.0
        with:
          name: eden-android-Coexist

      - uses: actions/download-artifact@v4.3.0
        with:
          name: tag

      - uses: actions/download-artifact@v4.3.0
        with:
          name: count

      - uses: actions/download-artifact@v4.3.0
        with:
          name: changelog

      - uses: actions/download-artifact@v4.3.0
        with:
          name: source

      - name: Generate changelog
        run: |
          echo "TAG=$(cat tag)" >> "${GITHUB_ENV}"
          echo "COUNT=$(cat count)" >> "${GITHUB_ENV}"
          echo "BODY<<EOF" >> "${GITHUB_ENV}"
          cat changelog >> "${GITHUB_ENV}"
          echo "EOF" >> "${GITHUB_ENV}"

      - name: Release Eden
        uses: softprops/action-gh-release@v2.2.2
        with:
          name: "Eden Unofficial Nightly Release: ${{ env.COUNT }}"
          tag_name: "${{ env.TAG }}"
          body: "${{ env.BODY }}"
          prerelease: false
          draft: false
          generate_release_notes: false
          fail_on_unmatched_files: false
          make_latest: true
          files: |
            *.apk
